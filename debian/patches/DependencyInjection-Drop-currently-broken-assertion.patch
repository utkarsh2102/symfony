From: =?utf-8?q?David_Pr=C3=A9vot?= <david@tilapin.org>
Date: Sat, 16 Nov 2019 08:24:02 -1000
Subject: [DependencyInjection] Drop currently broken assertion

To be investigated
---
 .../Tests/Dumper/PhpDumperTest.php                 | 47 ----------------------
 1 file changed, 47 deletions(-)

diff --git a/src/Symfony/Component/DependencyInjection/Tests/Dumper/PhpDumperTest.php b/src/Symfony/Component/DependencyInjection/Tests/Dumper/PhpDumperTest.php
index ede8662..d9c2c94 100644
--- a/src/Symfony/Component/DependencyInjection/Tests/Dumper/PhpDumperTest.php
+++ b/src/Symfony/Component/DependencyInjection/Tests/Dumper/PhpDumperTest.php
@@ -248,53 +248,6 @@ class PhpDumperTest extends TestCase
         $this->assertStringMatchesFormatFile(self::$fixturesPath.'/php/services9_as_files.txt', $dump);
     }
 
-    public function testDumpAsFilesWithTypedReference()
-    {
-        $container = include self::$fixturesPath.'/containers/container10.php';
-        $container->getDefinition('foo')->addTag('hot');
-        $container->register('bar', 'stdClass');
-        $container->register('closure', 'stdClass')
-            ->setProperty('closures', [
-                new ServiceClosureArgument(new TypedReference('foo', \stdClass::class, $container::IGNORE_ON_UNINITIALIZED_REFERENCE)),
-            ])
-            ->setPublic(true);
-        $container->compile();
-        $dumper = new PhpDumper($container);
-        $dump = print_r($dumper->dump(['as_files' => true, 'file' => __DIR__, 'hot_path_tag' => 'hot', 'inline_factories_parameter' => false, 'inline_class_loader_parameter' => false]), true);
-        if ('\\' === \DIRECTORY_SEPARATOR) {
-            $dump = str_replace("'.\\DIRECTORY_SEPARATOR.'", '/', $dump);
-        }
-
-        $this->assertStringMatchesFormatFile(self::$fixturesPath.'/php/services10_as_files.txt', $dump);
-    }
-
-    public function testDumpAsFilesWithFactoriesInlined()
-    {
-        $container = include self::$fixturesPath.'/containers/container9.php';
-        $container->setParameter('container.dumper.inline_factories', true);
-        $container->setParameter('container.dumper.inline_class_loader', true);
-
-        $container->getDefinition('bar')->addTag('hot');
-        $container->register('non_shared_foo', \Bar\FooClass::class)
-            ->setFile(realpath(self::$fixturesPath.'/includes/foo.php'))
-            ->setShared(false)
-            ->setPublic(true);
-        $container->register('throwing_one', \Bar\FooClass::class)
-            ->addArgument(new Reference('errored_one', ContainerBuilder::RUNTIME_EXCEPTION_ON_INVALID_REFERENCE))
-            ->setPublic(true);
-        $container->register('errored_one', 'stdClass')
-            ->addError('No-no-no-no');
-        $container->compile();
-
-        $dumper = new PhpDumper($container);
-        $dump = print_r($dumper->dump(['as_files' => true, 'file' => __DIR__, 'hot_path_tag' => 'hot', 'build_time' => 1563381341]), true);
-
-        if ('\\' === \DIRECTORY_SEPARATOR) {
-            $dump = str_replace("'.\\DIRECTORY_SEPARATOR.'", '/', $dump);
-        }
-        $this->assertStringMatchesFormatFile(self::$fixturesPath.'/php/services9_inlined_factories.txt', $dump);
-    }
-
     /**
      * @requires function \Symfony\Bridge\ProxyManager\LazyProxy\PhpDumper\ProxyDumper::getProxyCode
      */
